@model MacroTracker.Models.FoodCreate

@{
    ViewBag.Title = "Create";
}

<link href="~/Content/Site.css" rel="stylesheet" />

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <div class="foodcreate">
        <h4>FoodCreate</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FoodName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FoodName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FoodName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Serving, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Serving, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Serving, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Calories, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Calories, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Calories, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Proteins, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Proteins, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Proteins, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fats, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fats, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fats, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Carbs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Carbs, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Carbs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
 </div>
    }

<div>
    <p><a class="btn btn-default" href="/Food/Index">Back To Foods &raquo;</a></p>
    <p><a class="btn btn-default" href="/Home">Back To Home &raquo;</a></p>
</div>    

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

    <style>
        td input {
            opacity: .8;
        }

        .foodcreate {
            background-image: url("../../Content/images/pastalgreen.jpg");
            background-size: contain;
            background-color: white;
            border-radius: 20px 20px 20px 20px;
            color: black;
        }

        .btn {
            color: black;
        }
    </style>
